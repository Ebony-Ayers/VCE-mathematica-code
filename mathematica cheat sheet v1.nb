(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    231296,       4947]
NotebookOptionsPosition[    226130,       4860]
NotebookOutlinePosition[    226524,       4876]
CellTagsIndexPosition[    226481,       4873]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions to help with the exam", "Title",
 CellChangeTimes->{{3.8132924410004263`*^9, 
  3.8132924603517523`*^9}},ExpressionUUID->"a592f913-e062-4513-bcf7-\
79743ab4aff5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Plotting", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.8132924717001743`*^9, 3.813292474938805*^9}, {
  3.8132925714286203`*^9, 3.813292596350691*^9}, {3.813292633521899*^9, 
  3.813292659667048*^9}, {3.81329325585433*^9, 3.813293285933772*^9}, {
  3.813293812001988*^9, 3.8132938138010893`*^9}, {3.813293911482191*^9, 
  3.81329393262597*^9}, {3.813294167793034*^9, 3.813294187192484*^9}, {
  3.813294223806793*^9, 3.8132942488266983`*^9}, {3.813294316911838*^9, 
  3.8132943338038063`*^9}},ExpressionUUID->"79f95e5c-e186-46d2-99d5-\
a3c77603abf7"],

Cell[BoxData[
 StyleBox["Functions", "Subsection"]], "Input",
 CellChangeTimes->{{3.813294331157061*^9, 
  3.813294331187291*^9}},ExpressionUUID->"4f1e8710-5c5e-44d0-be65-\
7b1e70bdd19f"],

Cell[TextData[{
 StyleBox["plotinator", "Text",
  FontWeight->"Bold"],
 StyleBox["\nPlots functions with labeled key points. For the values of key \
points and asymptotes, hover you mouse over them.\nThe syntax is basically \
the same as Plot however it does not accept extra arguments like plot range", 
  "Text"]
}], "Text",
 CellChangeTimes->{{3.813294307169272*^9, 3.813294328604591*^9}, {
  3.8132944297009172`*^9, 
  3.813294446545521*^9}},ExpressionUUID->"2f44ff17-925a-4d00-978b-\
26256129d5fa"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"plotinator", "[", 
   RowBox[{"function", ",", 
    RowBox[{"{", 
     RowBox[{"variable", ",", "min", ",", "max"}], "}"}]}], "]"}],
  Background->None], "\n", 
 StyleBox[
  RowBox[{"plotinator", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"function1", ",", "function2", ",", "..."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"variable", ",", "min", ",", "max"}], "}"}]}], "]"}],
  Background->None]}], "Code",
 CellChangeTimes->{{3.8132938272512712`*^9, 3.813293876478979*^9}, 
   3.813294091099807*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"56dffe48-d3b7-4330-a2b0-56c322cb43f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotinator", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], "+", 
      FractionBox["1", 
       RowBox[{"x", "-", "1"}]], "+", 
      FractionBox["1", 
       RowBox[{"x", "+", "1"}]]}], ",", 
     RowBox[{"x", "-", 
      RowBox[{"3", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.8132926807483387`*^9, 3.813292705593567*^9}, {
  3.813293079723312*^9, 3.8132930950257683`*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->"In[57]:=",ExpressionUUID->"56a55774-ac29-48ed-83b7-cc8c9ef896fa"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
Qlv3mVn/HWbo/2xdNU4=
          "]], 
         LineBox[CompressedData["
1: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
kDwJta3ezAvmyvj/AC7B240=
          "]], 
         LineBox[CompressedData["
1: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
f6IhAvI=
          "]]}, Annotation[#, "Charting`Private`Tag$9240#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1:eJwtlPdTE3YYhwMhgImyFAuVIYIUhVLAAgpyL8VxKOOE04JnkVFXGYqcQKij
QkFRoNoqJ6D1aAMW1IJolWHk/SJQxmGtGAwrCWEHZBNMYuBb2+sPn3ueP+C5
j1XUieDDmgwGI+DD/qUjrB6jlOINS46cUg45obTOVKooVqkNG84scsiDR862
c3KKnV0m15QqDnGxC4gaHqdoet3WeU7OIe6G6d1tQoq3dH3ihsc5xHtgpjW/
nGLhDHeoTcghwRdf3NsUTrG0frgjv5xDkl+mxx2tXUL+0edPNoVziEDAGauL
XMToMZa87wGbmJMTq9zN1KjX5355jR6bPI5pYOmLVNjt2p928fgyEpHtPN2V
pkSnP00UsXW6RPHT6UwEBZ5p8WqQWOoSnp7YNE+6gME6U8vb4nXIrd3OCa8v
yTGw2KRa1qBN0mIjuRt2zeMXT5z41220yWnm3eSEiVms1ejwrE5ikcjzL23e
lMygEzlqFCPQIrnPhvJuRU9jqzjBP9BVi9RI7JbfXzeJk+5s5r1MJrE28PbZ
e3scl2ldNcgd0SQPN2ZG9w+M4n32rwWKzZpE0lix1s1tGLknHTJzcjTIkEOu
Cz4ZwC1+xW3lEwxieK7UzVFDiunhd3P8vBnEwW3KoXiuF7NeePrJtlL8fvvE
39VcIVoFeZ5yFC+i8d6yq/s/akdWrv2hNxlqfLjQqN9s04pvahUa+dvfY3HP
UI4svRZrwsR5gaNKDAsy+6Pn6yLM6i8UWfAUWM0+3fE8kQd3P9krCzr0Dl37
NSxSQxFEUsvJZPYCWk8/VXo8bwF1anNhVdM87uJ1vQgMbQfHG5f8334zhzsC
jJjyx0Ioj/XENKNZvBIuPO9U2Qtmdq2STe3T2BRovmKPkRS2VPTPlk9M4oSV
8bn2ggFYKR5L/fTwW0w8ZR95ZfUwZGUJbsfLZCjsNQg+0jwKG6ynfs93H8GI
lK0jOv7jUHih3kTxaBDr7d0v17MmwUvQnLhVJUXbZfzRIt9pONajHxYrEqM5
P2YHK3MGsvWDxsYkXchQaZYm9M8Cw2T+gGuSAN8FPTvYuH4efOON2R2v/sKe
z8PXrE+Xg91+7fVCcT3GhxgYrutdAMYl1aTY6+GHrgdDtcwVwPhPzkLZgcLf
5rhK6KthfetxpRJCvL7zbX6mgqox5TafyUaoOBi3zkP9HjLl0StfSV+Cgr2N
Wb1vEfrsl68Y/LIDgl95upnnLYHvjqnOUxHdwPbk1PF/XgK7tw5ac0ndUFfU
7fcVbwm0rkV/djKnG5y4KZE3y5aA9A1lxNV0g55lZbZp4xJsPtPrcmRVD7TE
ugwYzy6BzaOW7JDmHvDW3XBVz58Cw6rI28NJBIqTio/Lgij0NUljqnaKoLyn
qTgghAL/uOUNtzARWJQfeZodRYHLL5hwuSwC9b6iYXYKhemQHwvsB0VQybP0
0rlDofeHc/NmeWI4vmKq6c49ClWufMubZWKwTa4N3llBIa9Xudu0UQzXd4cd
y+BT2LMx8RfjWTEkzBRcY76m0NwYE6jnL4GNB6IteJ0USmJLU7KjJCBt2FLq
I6aQvnKkiJ0igT15nbWpMgrekVHvte9IQFezZJfVFIW1uoW2GXwJYEyygMxT
UJeJgpivJZDUsTM8QkWhc9+as6kyCfz/X1ClDi2hVAL/AP2sma4=
          "]]}, 
        Annotation[#, 
         "Charting`Private`Tag$9240#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       PointSize[Large], {
        TagBox[
         TooltipBox[
          PointBox[{0.08869753427018126, 0.9139483398362171}], 
          RowBox[{"{", 
            
            RowBox[{"0.0886975342701812604`2.", ",", 
              "0.9139483398362171765`2.51600032013087"}], "}"}]], 
         Annotation[#, {
          0.0886975342701812604`2., 0.9139483398362171765`2.51600032013087}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          PointBox[{1.484919422308334, 6.879235498117178}], 
          RowBox[{"{", 
            
            RowBox[{"1.4849194223083339545`2.", ",", 
              "6.8792354981171783947`1.7199149824126467"}], "}"}]], 
         Annotation[#, {
          1.4849194223083339545`2., 6.8792354981171783947`1.7199149824126467},
           "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          PointBox[{0.5886500289984353, 0}], 
          RowBox[{"{", 
            RowBox[{"0.588650028998435375`2.", ",", "0"}], "}"}]], 
         Annotation[#, {0.588650028998435375`2., 0}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          PointBox[{0, 1}], 
          RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]], 
         Annotation[#, {0, 1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          PointBox[
           NCache[{
             Rational[3, 2], 0}, {1.5, 0}]], 
          RowBox[{"{", 
            RowBox[{
              FractionBox["3", "2"], ",", "0"}], "}"}]], Annotation[#, {
           Rational[3, 2], 0}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          PointBox[
           NCache[{0, 
             Rational[-3, 2]}, {0, -1.5}]], 
          RowBox[{"{", 
            RowBox[{"0", ",", 
              RowBox[{"-", 
                FractionBox["3", "2"]}]}], "}"}]], Annotation[#, {0, 
           Rational[-3, 2]}, "Tooltip"]& ]}, 
       Directive[
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}]], {
        TagBox[
         TooltipBox[
          LineBox[{{-2, 0}, {2, 0}}], 
          RowBox[{"y", "\[Equal]", "0"}]], 
         Annotation[#, $CellContext`y == 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          LineBox[{{-1, -10.139403683460735`}, {-1, 9.724081856188064}}], 
          RowBox[{
            TagBox["x", HoldForm], "\[Equal]", 
            RowBox[{"-", "1"}]}]], 
         Annotation[#, HoldForm[$CellContext`x] == -1, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          LineBox[{{1, -10.139403683460735`}, {1, 9.724081856188064}}], 
          RowBox[{
            TagBox["x", HoldForm], "\[Equal]", "1"}]], 
         Annotation[#, HoldForm[$CellContext`x] == 1, "Tooltip"]& ]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-10.139403683460735`, 9.724081856188064}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          TagBox["x", HoldForm]], "+", 
         FractionBox["1", 
          RowBox[{
            RowBox[{"-", "1"}], "+", 
            TagBox["x", HoldForm]}]], "+", 
         FractionBox["1", 
          RowBox[{"1", "+", 
            TagBox["x", HoldForm]}]]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox["3", "2"]}], "+", 
         TagBox["x", HoldForm]}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8132930810830727`*^9, 3.813293105903063*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"987abeea-106c-4d1d-9bdf-628cbda3ac37"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Probability", "Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.8132931917421017`*^9, 3.813293193539709*^9}, {
   3.81329322422567*^9, 3.8132932326856956`*^9}, {3.813294194238923*^9, 
   3.8132942152587643`*^9}, 
   3.813294344922563*^9},ExpressionUUID->"fe5a66db-0e15-4ba9-b77f-\
ffddc1a70c9d"],

Cell[TextData[{
 StyleBox["plotNormalDistributionBetween",
  FontWeight->"Bold"],
 "\nPlots probability density functions and shades the desired area. The by \
default the function will show 4 standard deviations either side of the mean. \
Supplying standardDeviationsToShow parameter can change this"
}], "Text",
 CellChangeTimes->{{3.8132944489641457`*^9, 3.813294466306196*^9}, {
  3.813294681037383*^9, 3.813294727522916*^9}, {3.813295092673752*^9, 
  3.813295108399283*^9}},ExpressionUUID->"49e36deb-328e-448e-ab67-\
2d79c55b9990"],

Cell[BoxData[{
 RowBox[{"plotNormalDistributionBetween", "[", 
  RowBox[{"mean", ",", "standardDeviation", ",", "min", ",", "max"}], 
  "]"}], "\n", 
 RowBox[{"plotNormalDistributionBetween", "[", 
  RowBox[{
  "mean", ",", "standardDeviation", ",", "min", ",", "max", ",", 
   "standardDeviationsToShow"}], "]"}]}], "Code",
 CellChangeTimes->{{3.813294595388279*^9, 3.813294621492671*^9}, {
  3.813295171400588*^9, 3.813295199612687*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"749a9be6-1655-4c92-86ce-4ae3561e9381"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotNormalDistributionBetween", "[", 
  RowBox[{"100", ",", "15", ",", "85", ",", "115"}], "]"}]], "Code",
 CellChangeTimes->{{3.813294511766014*^9, 3.813294584860302*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[164]:=",ExpressionUUID->"5aab6b6f-784b-47b7-af9e-9ecbef8e3c1f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
CK8MBv6srDBwsvz//0/5H/tpv+Y=
        "]]},
      Annotation[#, "Charting`Private`Tag$47721#1"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 57, 217, 50, 253, 199, 245, 153, 191, 237, 115, 145, 
          183, 229, 85, 107, 137, 175, 221, 63, 76, 98, 128, 166, 212, 49, 48,
           47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31,
           62, 75, 97, 127, 165, 211, 30, 61, 74, 96, 126, 164, 210, 29, 84, 
          106, 136, 174, 220, 60, 73, 95, 125, 163, 209, 28, 83, 105, 135, 
          173, 219, 59, 72, 94, 124, 162, 208, 27, 114, 144, 182, 228, 82, 
          104, 134, 172, 218, 58, 111, 141, 179, 225, 71, 147, 185, 231, 93, 
          123, 161, 207, 26, 152, 190, 236, 113, 195, 241, 143, 181, 227, 81, 
          197, 243, 149, 248, 187, 233, 103, 250, 193, 239, 133, 246, 171, 
          254, 255, 252, 198, 244, 150, 249, 188, 234, 110, 251, 194, 240, 
          140, 247, 178, 224, 70, 196, 242, 146, 184, 230, 92, 192, 238, 122, 
          160, 206, 25, 151, 189, 235, 112, 142, 180, 226, 80, 148, 186, 232, 
          102, 132, 170, 216, 56, 109, 139, 177, 223, 69, 91, 121, 159, 205, 
          24, 79, 101, 131, 169, 215, 55, 108, 138, 176, 222, 68, 90, 120, 
          158, 204, 23, 78, 100, 130, 168, 214, 54, 67, 89, 119, 157, 203, 22,
           77, 99, 129, 167, 213, 53, 66, 88, 118, 156, 202, 21, 52, 65, 87, 
          117, 155, 201, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
          6, 5, 4, 3, 2, 51, 64, 86, 116, 154, 200}}]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[{1, 200, 154, 116, 86, 64, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
          11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 201, 155, 117, 87, 65, 52, 
          21, 202, 156, 118, 88, 66, 53, 213, 167, 129, 99, 77, 22, 203, 157, 
          119, 89, 67, 54, 214, 168, 130, 100, 78, 23, 204, 158, 120, 90, 68, 
          222, 176, 138, 108, 55, 215, 169, 131, 101, 79, 24, 205, 159, 121, 
          91, 69, 223, 177, 139, 109, 56, 216, 170, 132, 102, 232, 186, 148, 
          80, 226, 180, 142, 112, 235, 189, 151, 25, 206, 160, 122, 238, 192, 
          92, 230, 184, 146, 242, 196, 70, 224, 178, 247, 140, 240, 194, 251, 
          110, 234, 188, 249, 150, 244, 198, 252, 255}], 
         LineBox[{254, 171, 246, 133, 239, 193, 250, 103, 233, 187, 248, 149, 
          243, 197, 81, 227, 181, 143, 241, 195, 113, 236, 190, 152, 26, 207, 
          161, 123, 93, 231, 185, 147, 71, 225, 179, 141, 111, 58, 218, 172, 
          134, 104, 82, 228, 182, 144, 114, 27, 208, 162, 124, 94, 72, 59, 
          219, 173, 135, 105, 83, 28, 209, 163, 125, 95, 73, 60, 220, 174, 
          136, 106, 84, 29, 210, 164, 126, 96, 74, 61, 30, 211, 165, 127, 97, 
          75, 62, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          46, 47, 48, 49, 212, 166, 128, 98, 76, 63, 221, 175, 137, 107, 85, 
          229, 183, 145, 115, 237, 191, 153, 245, 199, 253, 50}]},
        Annotation[#, "Charting`Private`Tag$48879#1"]& ]}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Random Variable (standard deviation)\"", TraditionalForm], 
    FormBox["\"Probability X=x\"", TraditionalForm]},
  AxesOrigin->{40., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{40, 160}, {0., 0.026596146985338694`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.813294529032029*^9, 3.813294585346984*^9}, 
   3.8132948585517883`*^9, 3.8132949075401697`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"83ee11fb-23e0-459a-8db5-9082ec92aa2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotNormalDistributionBetween", "[", 
  RowBox[{"0", ",", "1", ",", 
   RowBox[{"-", "0.5"}], ",", "0.5", ",", "2"}], "]"}]], "Code",
 CellChangeTimes->{{3.8132947366473637`*^9, 3.813294772061927*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[163]:=",ExpressionUUID->"7c6ff263-4e8d-4733-bdb9-9c3e96493967"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
zO8YkCvNhP+d3+H/5/f/AIp0QnM=
        "]]},
      Annotation[#, "Charting`Private`Tag$46566#1"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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

     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvR0q6u1tFuqW7U1oBaaRBGgEllO4O6W5pkBZQuqS7pZFG
wX3gYq/nzNy+s07qxu2rtwsXCoXCiBf2oQW4Tw7iuDitUXS+HiGc7946g328
ph6dGc82HlOMqrRiKGu5RXaykZUsfE5mPuNTPiETGclAetKRljSkJhVFqUJL
hrCGm6SkCJVpwWB+5QYpKEwlmvMzq7lOcurSiXFs5RGFqEgzfmIV10hGHToy
lt94SEG6M4XdPKcCTRnESq6SlF5MZy+vqE0HxrCFB3xBNyazi2eUZyZ/8i9N
GMgKrpCEeRwOtrVXTz1BRN/TdA8vqcVfRHY/W6PrAX1Le2I6H9PwOlqj6maN
G/bhvcTmlPPHOkdj6EF9R1diOR/XCDpJo+lOfUo5ThLJ3S/6B29ozFE+cj9A
l3OZxMzlUCj0/qH2kKn8zgtqMov9/Ec7RrGJe+SnCxPZwT+U5Rv6s4xLJOJL
2jKSjdwlH98xge08oQyN+JGlXCQhNWjDCDbwN3kpTUN+YAkXSEB1WjOc9dwh
D6VoQD8Wc574VONbhrGO2+SmJF/Tl0WcIx65KMFX9GEhZ4MdiUPsYKtg72DD
4B0EWwV7EyXYN3gjwVZEDPYM3kSwEcH/IyfFqc/3LOAM/wM/n4Iy
          
          "]]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl0blLF2Acx/GfZlqa989r7G9QU1fPHPOYPHPMo8UEB28n8ZpUaBAp0PIY
S50scJBIkIgoz1HTyQQHEXs9OLx483yf8fO07XVNV0wkEhkj9DeL9NFAKfnE
8oA4HhJPAo94TCJJPCGZFFJJI50MMvnDEv00UkYBUfb5wABNlFPIKZ8Y5xUv
yOKAjwzSTAXPOOMzE7RTQzaHLDNEC5UU8Zd1JumglhyOWGGYVqq4ZIsZuinm
nA2m6KSOXI5ZZYSXPOcfX5jlDSVcsMk0XdzyjQXquWabt/RG7ofalffkccIa
o2Ejf3vaxg07zIet3H9qNVd8DVu5zYU99UfYSnv0ju9hQ+93YV/9FXbUKP8B
Gk9Agg==
          "]], LineBox[CompressedData["
1:eJwt0TksHmAAx+FP0zSiEYluaPlaqq4qq6td66gYqoyOYqEYKlhRTK6hgoik
VtoyUQaCiISIiNW9OQaNiohn6PDk93/f8X2DFQ0l9SGBQOAbT4w5fax9+lC3
NUIb9I4Nwp0nNFR39SPXrDDCI/c72kqIvak/iGKfKTqo5JZ1xnnPFUt85ytZ
nDFPP18o5R+rjNJGNAdM00kV+fxlmWFayOacPwzQyCdiOOQnXVRTQA4XLDBI
E2U85Yhf/9/uM4Xk8oxjftNNDUXkEcsJM/RQywfeEkeQ57wgngReksgrkkgm
hVTSeE06b8jglFl6qaOYd1yyyBDNlHPDGmO088B/bekkYfaeRmqm3gO/uEM4

          "]]},
        Annotation[#, "Charting`Private`Tag$47120#1"]& ]}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Random Variable (standard deviation)\"", TraditionalForm], 
    FormBox["\"Probability X=x\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {0., 0.3989422614960933}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.813294754481484*^9, 3.813294772367765*^9}, 
   3.813294860625124*^9, 3.813294904227676*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"104d3a8e-dc8b-4f75-aa6c-304e15b44d44"]
}, Open  ]],

Cell[TextData[{
 StyleBox["plotNormalDistributionGreaterThan",
  FontWeight->"Bold"],
 "\nPlots probability density functions and shades the desired area. The by \
default the function will show 4 standard deviations either side of the mean. \
Supplying standardDeviationsToShow parameter can change this. The \
standardDeviationsToShow parameter is the same as in \
plotNormalDistributionBetween."
}], "Text",
 CellChangeTimes->{{3.813295112979143*^9, 3.813295115776642*^9}, {
  3.8132953036001673`*^9, 
  3.813295346979055*^9}},ExpressionUUID->"c54f45dd-59aa-43bb-9d87-\
ca9875265c75"],

Cell[BoxData[{
 RowBox[{"probabilityNormalDistributionGreaterThan", "[", 
  RowBox[{"mean", ",", "standardDeviation", ",", "min"}], "]"}], "\n", 
 RowBox[{"probabilityNormalDistributionGreaterThan", "[", 
  RowBox[{
  "mean", ",", "standardDeviation", ",", "min", ",", 
   "standardDeviationsToShow"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8132951596312103`*^9, 3.813295196636614*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c0fc913f-ccf7-43f8-bb04-649c2ded4fea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotNormalDistributionGreaterThan", "[", 
  RowBox[{"30", ",", "2", ",", "32"}], "]"}]], "Code",
 CellChangeTimes->{{3.813295130208681*^9, 3.813295144821282*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[191]:=",ExpressionUUID->"5b59f1de-9007-4fe6-8fbc-89930dfdbde6"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
5f8AcOuesQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$49471#1"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
OrrOViz/rpApDv/9r/H9//pvXv23/gdqmmRl
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 156, 157, 50, 155, 135, 154, 116, 134, 153, 98, 115, 
          133, 152, 81, 97, 114, 132, 151, 65, 80, 96, 113, 131, 150, 49, 64, 
          79, 95, 112, 130, 149, 48, 63, 78, 94, 111, 129, 148, 47, 62, 77, 
          93, 110, 128, 147, 46, 61, 76, 92, 109, 127, 146, 45, 60, 75, 91, 
          108, 126, 145, 44, 59, 74, 90, 107, 125, 144, 43, 58, 73, 89, 106, 
          124, 143, 42, 57, 72, 88, 105, 123, 142, 41, 56, 71, 87, 104, 122, 
          141, 40, 55, 70, 86, 103, 121, 140, 39, 54, 69, 85, 102, 120, 139, 
          38, 53, 68, 84, 101, 119, 138, 37, 52, 67, 83, 100, 118, 137, 36, 
          35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 
          18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 66, 
          82, 99, 117, 136}}]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[{1, 136, 117, 99, 82, 66, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
           12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
           29, 30, 31, 32, 33, 34, 35, 36, 137, 118, 100, 83, 67, 52, 37, 138,
           119, 101, 84, 68, 53, 38, 139, 120, 102, 85, 69, 54, 39, 140, 121, 
          103, 86, 70, 55, 40, 141, 122, 104, 87, 71, 56, 41, 142, 123, 105, 
          88, 72, 57, 42, 143, 124, 106, 89, 73, 58, 43, 144, 125, 107, 90, 
          74, 59, 44, 145, 126, 108, 91, 75, 60, 45, 146, 127, 109, 92, 76, 
          61, 46, 147, 128, 110, 93, 77, 62, 47, 148, 129, 111, 94, 78, 63, 
          48, 149, 130, 112, 95, 79, 64, 49, 150, 131, 113, 96, 80, 65, 151, 
          132, 114, 97, 81, 152, 133, 115, 98, 153, 134, 116, 154, 135, 155, 
          50}]},
        Annotation[#, "Charting`Private`Tag$50629#1"]& ]}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Random Variable (standard deviation)\"", TraditionalForm], 
    FormBox["\"Probability X=x\"", TraditionalForm]},
  AxesOrigin->{22., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{22, 38}, {0., 0.19947110239004023`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8132951462783337`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"58ba64ea-a057-42e1-a048-010b30a32c45"]
}, Open  ]],

Cell[TextData[{
 StyleBox["plotNormalDistributionLessThan",
  FontWeight->"Bold"],
 "\nPlots probability density functions and shades the desired area. The by \
default the function will show 4 standard deviations either side of the mean. \
Supplying standardDeviationsToShow parameter can change this. The \
standardDeviationsToShow parameter is the same as in \
plotNormalDistributionBetween."
}], "Text",
 CellChangeTimes->{{3.813295118004016*^9, 3.8132951194578447`*^9}, {
  3.813295320550007*^9, 
  3.8132953540299253`*^9}},ExpressionUUID->"e9fcefaf-fed6-4edb-a100-\
85d60ad2a707"],

Cell[BoxData[{
 RowBox[{"plotNormalDistributionLessThan", "[", 
  RowBox[{"mean", ",", "standardDeviation", ",", "max"}], "]"}], "\n", 
 RowBox[{"plotNormalDistributionLessThan", "[", 
  RowBox[{
  "mean", ",", "standardDeviation", ",", "max", ",", 
   "standardDeviationsToShow"}], "]"}]}], "Code",
 CellChangeTimes->{{3.81329527862424*^9, 3.813295300354806*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"67149c6a-aac4-4ef0-b2cb-131a86e8ff5d"],

Cell[BoxData[
 RowBox[{"plotNormalDistributionLessThan", "[", 
  RowBox[{"200", ",", "50", ",", "225"}], "]"}]], "Code",
 CellChangeTimes->{{3.813295211350806*^9, 3.813295270161415*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[217]:=",ExpressionUUID->"5142461b-b202-4a47-9fc8-5ef0e3526d4d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$52982#1"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1XWU1FUYBuAdultFVMqgJaVTJJReumEJpXbpjqW7QxEMLLosUDAIWzGx
xQAVsFtC4fnO/vGc773v2TPzm3vv7JRKSUtOzZSUlJRgUyJjPpjIyNXkB8xW
rEtk/FFTlvGc5b/Uk+cxS36SX6hmPY32cmq8Hp9RXDeEqnI7RsTr8ynX6e+i
ijyTJ/iZqrqptJWHcz+fcK3uTirL6TzOT1TRTaGN/Ax/Uiuej2HyfXzMNdaD
uVk+yD/UtZ7LDHkvP1LZejKt5f38QU3rmQyVz9NAXsBG+SOKyYOoJF/iVnkp
B+QW5ir+ltebdZjD9Hg283bWcNH6XrMRi9hjvdFsxgp+sL47np9JcUaxN+Yd
rOU/6w1mYxazz7q5uZLf5XvMW0iPM7Fuaa7mnFzfnM8G+TZzOR/KV5sDqSj/
TxN5Cc/Kf1Fbnh1nL1+gobyQ3fJZKskT4xnlp/mNGrHfcfbxeTlOUesBVJCn
soszVNRNiD2Sn+JXqsfexV2I/eQDrrJOobw8hZ2cpoJuPC3lwbEHvM+Vuv6U
kyezg+8prxtHC3lQ7DfvcYWuH2VjTxnIOt6liL4vZeSbuJEbuJ7SlKIkJeL7
EPc+7nLcx7g3scfx+eMzxHPFe8Vr0owBrOUdCnuPPhSOMyKFNbxNIX1vCslN
6c9qjlFQ34uCcS/pxyreooC+JwXibOnLSt4kv74H+eXG9GEFb5BP3518ciN6
s5zXyavvRl55Etv5jnK6sTSUe7GM18ij60oeuQE9Wcqr5NZ3Ibc8kW18S1nd
GOrLPVjCK+TSdSaXPIGtnKKMbjT15O4s5mVy6jqRUx7PFk7GOepGUVfuxiJe
IoeuIznkcWzmmzhz3cj4bstdWchRsuuSyS6P5TG+jvuhS6O23IUFHCGbrgPZ
5DE8yldxl3Sp1JI7M5/DZNW1J6s8mkf4Mu6dbgQ15U7M4xBZdO3IIo/iYU7E
HdUNj/8Pckfm8iKZdW3JLI/kIb6gpG4YNeRk5vACmXRtiN+XNDbxOSV0Q6ku
d2A2z5PQteYy2jC1aw==
          "]]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl1WWUlVUUBuChO4ZuGLq7u2FGWlJFEQWlVUBEFFAaFHsICWkVlLQxAJsw
SQUFBWkBAbF99uLHc8973rVm3W9/58y6SQNH9RiZJiEhYamPWDvFynvyFLpT
h6G6knwvL2MUaemsS8v78lR6UJdhulIclpdzD+nookvHB/I0bqQew3VJHJFX
cC/p6apLzzZ5Oj2pzwhdaX6QV3IfGeimy8B2eQa9aEAMWYYf5VWMJmPMp8vI
DnkmvWkY8+nKclRezRgyxXy6THwoz6IPjWI+XTmOyWsYS+aYT5eZj+TZ9KVx
zKcrz0/yi9xPlphPl4WP5Tn0o0nMp6vAz/JLjCNrzKfLyifyY9xE05hPV5Hj
8ss8QLaYT5eNT+XHuZlmZI9Z9Nn5TJ7LLTSP2XWVOCGvZTw5YhZdDj6Xn6A/
LcgZz63PyU75SW6lJbniGfW52CU/xW20Inc8jz43u+WnGUBrEuN59InskZ/h
dtqQJ75bn4cv5GcZSFvyxnfr8/Kl/Bx30I585KcABSlEYYpQlGIUpwQlKUUS
pSlDWcpRngoxh+/Ix1dyKnfSnooxhz4/X8vzGESHuCe6yvwir+NBKsVsugJ8
I89nMB3jnuiqcFJ+hQlUjnl1BflWXsBdTLSvwwX5NZLj3thX5ZT8Kg9RJd6J
rhB75YXczST7ulyUXycl7pF9NU7L65klN+cv+WGmyA25Ir8dd1Juxb9y1Xgn
cmH2xZ2xtuV5eYa1KX/E2Vo7MkSebK3HfC7FfbG25w15jrVl/D3/xNlaU1jC
DXFPrdWZx5m4h9Z2LGKD/WxrCxbyd9wbazKLmWg/1dqIBVyN+2jtwDvxv2Nt
zX9ytThPuQj75UXMlJvxpzyUR+T6/Ca/Sac4a/sanJU3xvtmmn1jfpe3Uj3O
3r4oB+TFDONR+wZclt+ic9wF+5qckzfFu6NG3AVdMQ7KSxhOlzh7XS3Oy5vj
GakZZ68rziF5KSPoSi2G6EvwnfwCI+kWZ6+rza/ylng+pts34Zr8LnPlNsQP
TWqcUZrrvzu1Vf8DMO+0JA==
          "]]},
        Annotation[#, "Charting`Private`Tag$54140#1"]& ]}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Random Variable (standard deviation)\"", TraditionalForm], 
    FormBox["\"Probability X=x\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400}, {0., 0.007978844095601609}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.813295461066828*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"123412e6-2088-455a-8db7-833464346b06"],

Cell[TextData[StyleBox["Complex Numbers (spesh)", "Subsection"]], "Text",
 CellChangeTimes->{{3.8132954740444717`*^9, 
  3.813295490649448*^9}},ExpressionUUID->"00d65d0a-afd5-4bdc-b505-\
9a88233a768c"],

Cell[TextData[{
 StyleBox["complexPlot",
  FontWeight->"Bold"],
 "\nPlots regions of the complex plain. The variable represents the complex \
number for which the region is define as the set of solutions. Most commonly \
the variable is z."
}], "Text",
 CellChangeTimes->{{3.8132957685778008`*^9, 3.813295782777671*^9}, {
  3.813295938978053*^9, 
  3.813295981550352*^9}},ExpressionUUID->"65671342-ab63-43da-822c-\
787a2f67dc27"],

Cell[BoxData[
 RowBox[{"complexPlot", "[", 
  RowBox[{"equasion", ",", "variable", ",", 
   RowBox[{"{", 
    RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ymin", ",", "ymax"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.813295858262375*^9, 3.813295883615897*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"ba2fe511-7899-4034-b73d-7b6c3f2c9cc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complexPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"z", "-", "\[ImaginaryI]"}], "]"}], "\[Equal]", 
    RowBox[{"2", 
     RowBox[{"Norm", "[", 
      RowBox[{"z", "+", "\[ImaginaryI]"}], "]"}]}]}], ",", "z", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.5"}], ",", "0"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.813295493691284*^9, 3.813295569152014*^9}, {
  3.813295622685655*^9, 3.813295653603177*^9}, {3.813295907064599*^9, 
  3.813295930439917*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[380]:=",ExpressionUUID->"4f227bfb-7b7a-422a-8d1c-ab6a956b2272"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
6C+m////zH8AvY9Q3g==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206}]},
       RowBox[{
         RowBox[{"Norm", "[", 
           RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", 
             TagBox["x", HoldForm], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
               TagBox["y", HoldForm]}]}], "]"}], "\[Equal]", 
         RowBox[{"2", " ", 
           RowBox[{"Norm", "[", 
             RowBox[{"\[ImaginaryI]", "+", 
               TagBox["x", HoldForm], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                 TagBox["y", HoldForm]}]}], "]"}]}]}]],
      Annotation[#, 
       Norm[Complex[0, -1] + HoldForm[$CellContext`x] + 
         Complex[0, 1] HoldForm[$CellContext`y]] == 
       2 Norm[Complex[0, 1] + HoldForm[$CellContext`x] + 
          Complex[0, 1] HoldForm[$CellContext`y]], "Tooltip"]& ]}], {}},
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-3.5, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.813295554754981*^9, 3.813295569357999*^9}, {
   3.8132956235211067`*^9, 3.8132957263948812`*^9}, 3.8132957985502367`*^9, {
   3.8132959074037037`*^9, 3.813295930774775*^9}},
 CellLabel->
  "Out[380]=",ExpressionUUID->"72170466-91fb-497b-a2fb-36e0734c7e0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Euler\[CloseCurlyQuote]s Method (spesh)", \
"Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.813437578997464*^9, 
  3.813437595708108*^9}},ExpressionUUID->"e7da2d4a-e040-4bb7-bfba-\
f18373435925"],

Cell[TextData[{
 StyleBox["eulersMethodPlot",
  FontWeight->"Bold"],
 "\nPlots the eulers method approximation along with the correct solution \
from DSolve. The gradient should NOT include y\[CloseCurlyQuote][x]==. "
}], "Text",
 CellChangeTimes->{{3.8134366605981493`*^9, 3.813436690568253*^9}, {
  3.813437736078238*^9, 3.8134377780564737`*^9}, {3.813438840330155*^9, 
  3.813438840959388*^9}},ExpressionUUID->"edc9503e-e721-452c-babd-\
d77cbac60feb"],

Cell[BoxData[
 RowBox[{"eulersMethodPlot", "[", 
  RowBox[{"gradient", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"x0", ",", "y0"}], "}"}], ",", "increment"}], "]"}]], "Code",
 CellChangeTimes->{{3.813437603661276*^9, 3.813437638281335*^9}, {
  3.81343770742006*^9, 3.8134377092901077`*^9}, {3.813437756898247*^9, 
  3.813437772827837*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1e46a582-4961-40eb-ab54-6ced595bef98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eulersMethodPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "+", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "0.5"}], "]"}]], "Code",
 CellChangeTimes->{{3.8134367073654118`*^9, 3.8134367172222767`*^9}, {
  3.8134372977995987`*^9, 3.813437336601657*^9}, {3.81343754075555*^9, 
  3.813437541127894*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[460]:=",ExpressionUUID->"fe3cc0a2-2e69-4da2-af90-3c2305c867f4"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{0., 0.}, {0.5, 0.5}, {1., 1.75}, {1.5, 4.125}, {2., 
        8.1875}, {2.5, 14.78125}, {3., 25.171875}, {3.5, 41.2578125}, {4., 
        65.88671875}, {4.5, 103.330078125}, {5., 159.9951171875}}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
5pkrud8+stugQpos/DGq9Zcb+R+CS6A6
        "]]},
      Annotation[#, "Charting`Private`Tag$60802#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Medium], 
    PointBox[{{0, 0}, {0.5, 0.5}, {1., 1.75}, {1.5, 4.125}, {2., 8.1875}, {
      2.5, 14.78125}, {3., 25.171875}, {3.5, 41.2578125}, {4., 65.88671875}, {
      4.5, 103.330078125}, {5., 159.9951171875}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 159.9951171875}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.813437337487422*^9, 3.81343754171592*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"896782f8-d623-4ade-bf04-c47e5c290fc6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Plotting vectors (spesh)", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.813438469149289*^9, 3.813438476409321*^9}, {
  3.813438528196424*^9, 
  3.813438532481659*^9}},ExpressionUUID->"c8d88f35-613a-4209-9db5-\
e8aa2690a29a"],

Cell[TextData[{
 StyleBox["geogebra3DSeption",
  FontWeight->"Bold"],
 "\nPlots vectors like Geogebra. There is not way to plot planes or equations \
in this version. Clicking and dragging will rotate the view. Holding control \
while clicking and dragging will scale the view. Holding shift while clicking \
and dragging will scale the view."
}], "Text",
 CellChangeTimes->{{3.813437858137107*^9, 3.8134378807098427`*^9}, {
   3.8134383466127567`*^9, 3.813438407825101*^9}, {3.813438449725041*^9, 
   3.813438451349803*^9}, {3.813438828119609*^9, 3.8134388332038517`*^9}, 
   3.8134390633352337`*^9},ExpressionUUID->"62cd0d15-f080-444e-a6ed-\
48ec620e70ce"],

Cell[BoxData[
 RowBox[{"geogebra3DSeption", "[", "vectors", "]"}]], "Code",
 CellChangeTimes->{{3.8134384254817343`*^9, 3.8134384288768253`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6da22188-2567-4a9d-a128-90274346cc61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geogebra3DSeption", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
    RowBox[{"vectorOrigin", "[", 
     RowBox[{"2", ",", "1", ",", "3"}], "]"}], ",", 
    RowBox[{"vectorFrom", "[", 
     RowBox[{"2", ",", "3", ",", "1", ",", 
      RowBox[{"-", "1"}], ",", "2", ",", "3"}], "]"}]}], "}"}], "]"}]], "Code",\

 CellChangeTimes->{{3.813437926661786*^9, 3.813437997733733*^9}, {
  3.813438126813496*^9, 3.813438172076768*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[518]:=",ExpressionUUID->"7a277444-c09c-407f-a90d-e86850d04f8a"],

Cell[BoxData[
 Graphics3DBox[{Arrow3DBox[{{0, 0, 0}, {3, 4, 5}}], 
   Arrow3DBox[{{0, 0, 0}, {2, 1, 3}}], Arrow3DBox[{{2, 3, 1}, {-1, 2, 3}}]},
  Axes->{1, 1, 1},
  AxesOrigin->{0, 0, 0},
  AxesStyle->{
    Directive[
     RGBColor[1, 0, 0], 
     Thickness[Large]], 
    Directive[
     RGBColor[0, 1, 0], 
     Thickness[Large]], 
    Directive[
     RGBColor[0, 0, 1], 
     Thickness[Large]]},
  ImageSize->{346.9254227132864, 385.4672847918123},
  ImageSizeRaw->Automatic,
  PlotRange->{{-5, 5}, {-5, 5}, {-5, 5}},
  ViewCenter->{{0.5, 0.5, 0.5}, {0.5, 0.5}},
  ViewPoint->{-0.7029524483595899, -2.4216661130161365`, 2.256411108910469},
  ViewVertical->{-0.14012903661844955`, 0.12944656497586626`, 
   0.9816350849029053}]], "Output",
 CellChangeTimes->{3.813438172543603*^9},
 CellLabel->
  "Out[518]=",ExpressionUUID->"69ece3a8-3cba-4447-bab7-a6f727f25196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"geogebra3DSeption", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vectorOrigin", "[", 
       RowBox[{"1", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"vectorOrigin", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "a", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.81343822405548*^9, 3.813438305011561*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "In[519]:=",ExpressionUUID->"ef987f79-f3fe-4b58-b9cc-2e6d6e86ef09"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.49, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -1, 1}}, Typeset`size$$ = {360., {178., 182.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`geogebra3DSeption[{
         $CellContext`vectorOrigin[1, 1, 0], 
         $CellContext`vectorOrigin[-1, $CellContext`a$$, 0]}], 
      "Specifications" :> {{$CellContext`a$$, -1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {221.6875, 227.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.813438305564909*^9},
 CellLabel->
  "Out[519]=",ExpressionUUID->"17f67c47-bc13-4485-9bb1-92c56fe8aa66"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Other", "Section"]], "Subsection",
 CellChangeTimes->{{3.813438551038587*^9, 
  3.813438551983747*^9}},ExpressionUUID->"cf80c064-3850-4d4d-89c3-\
0cb9381a7c88"],

Cell[TextData[{
 StyleBox["clearEverything",
  FontWeight->"Bold"],
 "\nClears EVERYTHING the user defined. ClearAll does not do this. ClearAll \
only clears what you put in it. This will clear variables, functions, things \
you accidentally defined that are causing errors."
}], "Text",
 CellChangeTimes->{{3.813438661941648*^9, 3.813438732886283*^9}, 
   3.813438824778393*^9},ExpressionUUID->"ea8ddc86-362c-47b4-99a1-\
504cd20f9a07"],

Cell[BoxData[
 RowBox[{"clearEverything", "[", "]"}]], "Code",
 CellChangeTimes->{{3.813438643290348*^9, 3.813438644340939*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3b8480d5-3151-457b-9b68-6e4062f99fc3"],

Cell[TextData[{
 StyleBox["resetMathematica",
  FontWeight->"Bold"],
 "\nQuits the kernel and starts a new one. Should do the same as aborting \
evaluation and then using clearEverything however Mathematica is weird and \
this is more likely to stop errors."
}], "Text",
 CellChangeTimes->{{3.813438740794471*^9, 
  3.8134388211297493`*^9}},ExpressionUUID->"ad58521b-a723-4281-9038-\
671534543eae"],

Cell[BoxData[
 RowBox[{"resetMathematica", "[", "]"}]], "Code",
 CellChangeTimes->{{3.813438647468216*^9, 3.813438648584352*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3f175a19-b784-4f9e-afd8-3f6ed7997dd0"],

Cell[TextData[{
 StyleBox["Actual Code", "Title"],
 "\n",
 StyleBox["You must shift enter ALL of the code", "Code"]
}], "Text",
 CellChangeTimes->{{3.8132927749331217`*^9, 3.8132927914724197`*^9}, {
  3.813293973011715*^9, 3.8132939967477837`*^9}, {3.813439084638453*^9, 
  3.813439084741095*^9}},ExpressionUUID->"411d0a35-3e40-4e31-a1b5-\
c4cc60f955d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"clearEverything", "[", "]"}], ":=", 
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"resetMathematica", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Quit", "[", "]"}], ";", 
     RowBox[{"x", "=", "0"}], ";", 
     RowBox[{"Clear", "[", "x", "]"}], ";"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vectorOrigin", "[", 
   RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vectorFrom", "[", 
   RowBox[{
   "i0_", ",", "j0_", ",", "k0_", ",", "i1_", ",", "j1_", ",", "k1_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i0", ",", "j0", ",", "k0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i1", ",", "j1", ",", "k1"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vector", "[", 
   RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"geogebra3DSeption", "[", "vec_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "maxRange", ",", "d", ",", "arrows"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxRange", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"d", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"arrows", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "vec", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"arrows", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"vec", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "3"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"d", "=", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"vec", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2", ",", "j"}], "]"}], "]"}], "-", 
               RowBox[{"vec", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"d", ">", "maxRange"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"maxRange", "=", "d"}], ";"}]}], "\[IndentingNewLine]",
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"arrows", ",", 
         RowBox[{"Axes", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"AxesOrigin", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", "Thick"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Green", ",", "Thick"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", "Thick"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxRange"}], ",", "maxRange"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxRange"}], ",", "maxRange"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxRange"}], ",", "maxRange"}], "}"}]}], 
           "}"}]}]}], "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eulersMethod", "[", 
    RowBox[{
    "grad_", ",", "y_", ",", "x_", ",", "increment_", ",", "startx_", ",", 
     "starty_", ",", "endx_", ",", 
     RowBox[{"showEvery_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "previousx", ",", "previousy", ",", "output", ",", "count"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"previousx", "=", "startx"}], ";", "\[IndentingNewLine]", 
      RowBox[{"previousy", "=", "starty"}], ";", "\[IndentingNewLine]", 
      RowBox[{"i", "=", "startx"}], ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"output", ",", 
        RowBox[{"{", 
         RowBox[{"previousx", ",", "previousy"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "<", "endx"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"previousx", "+=", "increment"}], ";", "\[IndentingNewLine]", 
         RowBox[{"previousy", "+=", 
          RowBox[{"increment", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"grad", "/.", 
              RowBox[{
               RowBox[{"y", "[", "x", "]"}], "\[Rule]", "previousy"}]}], "/.", 
             RowBox[{"x", "\[Rule]", "previousx"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"count", ",", "showEvery"}], "]"}], "\[Equal]", "0"}], 
             ",", 
             RowBox[{
              RowBox[{"i", "+", "increment"}], "\[GreaterEqual]", "endx"}], 
             ",", 
             RowBox[{"i", "\[Equal]", "startx"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", 
              RowBox[{"{", 
               RowBox[{"previousx", ",", "previousy"}], "}"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"i", "+=", "increment"}], ";", "\[IndentingNewLine]", 
         RowBox[{"count", "+=", "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eulersMethodPlot", "[", 
    RowBox[{
    "grad_", ",", "dom_", ",", "y_", ",", "initialCondition_", ",", 
     "interval_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gradxy", ",", "var", ",", "correctSolution", ",", "iceq", ",", 
       "correctPlot", ",", "approximation", ",", "approxPlot"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"var", "=", 
       RowBox[{"dom", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gradxy", "=", 
       RowBox[{"grad", "/.", 
        RowBox[{"y", "\[Rule]", 
         RowBox[{"y", "[", "var", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"iceq", "=", 
       RowBox[{
        RowBox[{"y", "[", 
         RowBox[{"initialCondition", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"initialCondition", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"correctSolution", "=", 
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "var", "]"}], "\[Equal]", "gradxy"}], 
           ",", "iceq"}], "}"}], ",", 
         RowBox[{"y", "[", "var", "]"}], ",", "var"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"approximation", "=", 
       RowBox[{"eulersMethod", "[", 
        RowBox[{"gradxy", ",", "y", ",", "var", ",", "interval", ",", 
         RowBox[{"initialCondition", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"initialCondition", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"dom", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"approxPlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"approximation", ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
            RowBox[{"Point", "[", "approximation", "]"}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"correctPlot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"correctSolution", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", "dom", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "approxPlot", "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"approxPlot", ",", "correctPlot"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"complexPlot", "[", 
   RowBox[{"f_", ",", "z_", ",", "dom_", ",", "ran_"}], "]"}], ":=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"f", "/.", 
      RowBox[{"z", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"\[ImaginaryI]", "*", "y"}]}], ")"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"dom", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"dom", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"ran", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ran", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "False"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"probabilityNormalDistributionBetween", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", "b_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"NProbability", "[", 
        RowBox[{
         RowBox[{"a", "<", "x", "<", "b"}], ",", 
         RowBox[{"x", "\[Distributed]", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mean", ",", "stdev"}], "]"}]}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probabilityNormalDistributionGreaterThan", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "a", ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"NProbability", "[", 
        RowBox[{
         RowBox[{"a", "<", "x"}], ",", 
         RowBox[{"x", "\[Distributed]", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mean", ",", "stdev"}], "]"}]}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probabilityNormalDistributionLessThan", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", "a"}], 
          "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"NProbability", "[", 
        RowBox[{
         RowBox[{"x", "<", "a"}], ",", 
         RowBox[{"x", "\[Distributed]", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mean", ",", "stdev"}], "]"}]}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotNormalDistributionBetween", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", "b_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotNormalDistributionGreaterThan", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "a", ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotNormalDistributionLessThan", "[", 
    RowBox[{"mean_", ",", "stdev_", ",", "a_", ",", 
     RowBox[{"numberOfStdevToShow_", ":", "4"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", 
           RowBox[{"mean", "+", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}]}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Random Variable (standard deviation)\>\"", ",", " ", 
            "\"\<Probability X=x\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"mean", ",", "stdev"}], "]"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"mean", "-", 
            RowBox[{"stdev", "*", "numberOfStdevToShow"}]}], ",", "a"}], 
          "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"PlotRange", "[", "plot1", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Zip", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "output"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"output", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roots", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "rawSol", ",", "root", ",", "output"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawSol", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "\[Equal]", "0"}], "&&", "sdom"}], ",", "x", ",", 
         "Reals"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"root", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "rawSol", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawSol", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1", ",", "2", ",", "0"}], "]"}], "]"}], 
            "\[Equal]", "Root"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"root", ",", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"rawSol", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"root", ",", 
           RowBox[{"rawSol", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"root", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"root", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "root", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"root", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1", ",", "2"}], "]"}], "]"}], ",", "0"}],
                "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "output", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"approximateRoots", "[", "solutions_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "output"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "solutions", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"solutions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1", ",", "2", ",", "0"}], "]"}], "]"}], 
            "\[Equal]", "Root"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"solutions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"output", ",", " ", 
           RowBox[{"solutions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"turningPoints", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"solveResult", ",", "skippedIfStatment"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"skippedIfStatment", "=", "True"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"f", ",", "x"}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"skippedIfStatment", "=", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"solveResult", "=", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"skippedIfStatment", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"solveResult", "=", 
          RowBox[{"approximateRoots", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"f", ",", "x"}], "]"}], "\[Equal]", "0"}], "&&", 
              "sdom"}], ",", "x", ",", "Reals"}], "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"solveResult", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"solveResult", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Zip", "[", 
          RowBox[{
           RowBox[{"solveResult", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"f", "/.", 
            RowBox[{"x", "\[Rule]", 
             RowBox[{"solveResult", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], "]"}],
          "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<The answer is liable to contain errors\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maximumTurningPoints", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "TPs", ",", "output"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TPs", "=", 
       RowBox[{"turningPoints", "[", 
        RowBox[{"f", ",", "x", ",", "sdom"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "TPs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"f", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
              RowBox[{"x", "\[Rule]", 
               RowBox[{"TPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}], "<", "0"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", 
              RowBox[{"TPs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minimumTurningPoints", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "TPs", ",", "output"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TPs", "=", 
       RowBox[{"turningPoints", "[", 
        RowBox[{"f", ",", "x", ",", "sdom"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"TPs", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "TPs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"f", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
              RowBox[{"x", "\[Rule]", 
               RowBox[{"TPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ")"}], ">", "0"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", 
              RowBox[{"TPs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stationaryPointsOfInflection", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "secondDSolutions", ",", "thirdDSolutions", ",", 
       "output", ",", "inflections", ",", "shouldAdd", ",", 
       "skippedIfStatment"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inflections", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"shouldAdd", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"skippedIfStatment", "=", "True"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"secondDSolutions", "=", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"skippedIfStatment", "=", "False"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"skippedIfStatment", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"secondDSolutions", "=", 
          RowBox[{"approximateRoots", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "0"}], 
              "&&", "sdom"}], ",", "x", ",", "Reals"}], "]"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"skippedIfStatment", "=", "True"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"thirdDSolutions", "=", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"skippedIfStatment", "=", "False"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"skippedIfStatment", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"thirdDSolutions", "=", 
          RowBox[{"approximateRoots", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "\[Equal]", "0"}], 
              "&&", "sdom"}], ",", "x", ",", "Reals"}], "]"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"secondDSolutions", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"secondDSolutions", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{"thirdDSolutions", "\[Equal]", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], ",", 
             RowBox[{"thirdDSolutions", "\[Equal]", 
              RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Return", "[", 
             RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "secondDSolutions", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"shouldAdd", "=", "False"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "\[LessEqual]", 
                  RowBox[{"Length", "[", "thirdDSolutions", "]"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"secondDSolutions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"thirdDSolutions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"shouldAdd", "=", "True"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"shouldAdd", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"inflections", ",", 
                    RowBox[{"secondDSolutions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", 
             RowBox[{"Zip", "[", 
              RowBox[{
               RowBox[{"inflections", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"f", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"inflections", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
              "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<The answer is liable to contain errors\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"movingPointsOfInflection", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "secondDSolutions", ",", "thirdDSolutions", ",", 
       "output", ",", "inflections", ",", "shouldAdd", ",", 
       "skippedIfStatment"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inflections", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"shouldAdd", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"skippedIfStatment", "=", "True"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"secondDSolutions", "=", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"skippedIfStatment", "=", "False"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"skippedIfStatment", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"secondDSolutions", "=", 
          RowBox[{"approximateRoots", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "0"}], 
              "&&", "sdom"}], ",", "x", ",", "Reals"}], "]"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"skippedIfStatment", "=", "True"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"thirdDSolutions", "=", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"skippedIfStatment", "=", "False"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"skippedIfStatment", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"thirdDSolutions", "=", 
          RowBox[{"approximateRoots", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "\[Equal]", "0"}], 
              "&&", "sdom"}], ",", "x", ",", "Reals"}], "]"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"secondDSolutions", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}]}], ",", 
          RowBox[{"secondDSolutions", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{"thirdDSolutions", "\[Equal]", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], ",", 
             RowBox[{"thirdDSolutions", "\[Equal]", 
              RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Return", "[", 
             RowBox[{"Zip", "[", 
              RowBox[{
               RowBox[{"secondDSolutions", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"f", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"secondDSolutions", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
              "]"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "secondDSolutions", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"shouldAdd", "=", "True"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "\[LessEqual]", 
                  RowBox[{"Length", "[", "thirdDSolutions", "]"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"secondDSolutions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"thirdDSolutions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"shouldAdd", "=", "False"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"shouldAdd", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"inflections", ",", 
                    RowBox[{"secondDSolutions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", 
             RowBox[{"Zip", "[", 
              RowBox[{
               RowBox[{"inflections", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"f", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"inflections", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
              "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<The answer is liable to contain errors\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"concaviteAtPointAsInteger", "[", 
    RowBox[{"f_", ",", "x_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "secondD", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"secondD", "=", 
       RowBox[{"D", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"secondD", "/.", 
           RowBox[{"x", "\[Rule]", "p"}]}], ")"}], "\[LessEqual]", "0"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "1", "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"-", "1"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\"\<Error\>\"", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yIntercepts", "[", 
    RowBox[{"f_", ",", "x_", ",", 
     RowBox[{"sdom_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "&&", "sdom"}], "/.", 
           RowBox[{"x", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "False"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "&&", "sdom"}], "/.", 
            RowBox[{"x", "\[Rule]", "0"}]}], ")"}]}], "}"}], "}"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evalulateValue", "[", "val_", "]"}], ":=", 
  "val"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotColors", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Mod", "[", 
     RowBox[{"n", ",", "15"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"obliqueAsymptote", "[", 
    RowBox[{"f_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "expandedForm", ",", "temp", ",", "output", ",", 
       "hasOAsymptote"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"expandedForm", "=", 
       RowBox[{"Expand", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"expandedForm", "[", 
          RowBox[{"[", "0", "]"}], "]"}], "\[Equal]", "Plus"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"hasOAsymptote", "=", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "expandedForm", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Limit", "[", 
                RowBox[{
                 RowBox[{"expandedForm", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}], 
               "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"temp", ",", 
                 RowBox[{"expandedForm", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"hasOAsymptote", "=", "True"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hasOAsymptote", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"hasOAsymptote", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"temp", "=", 
             RowBox[{"Total", "[", "temp", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", "temp"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"temp", "\[Equal]", "0"}], ",", 
              RowBox[{"output", "=", 
               RowBox[{"Drop", "[", 
                RowBox[{"output", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"temp", "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"hasOAsymptote", "=", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "expandedForm", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Limit", "[", 
                RowBox[{
                 RowBox[{"expandedForm", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"x", "\[Rule]", 
                  RowBox[{"-", "\[Infinity]"}]}]}], "]"}], "\[NotEqual]", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"temp", ",", 
                 RowBox[{"expandedForm", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"hasOAsymptote", "=", "True"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hasOAsymptote", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"hasOAsymptote", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"temp", "=", 
             RowBox[{"Total", "[", "temp", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", "temp"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"temp", "\[Equal]", "0"}], ",", 
              RowBox[{"output", "=", 
               RowBox[{"Drop", "[", 
                RowBox[{"output", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"temp", "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"DeleteDuplicates", "[", "output", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "output", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valueOfInequality", "[", 
   RowBox[{"inequ_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"inequ", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "x"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"inequ", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"inequ", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "x"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"inequ", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"verticleAsymptotes", "[", 
    RowBox[{"f_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "dom", ",", "asymptotes", ",", "output"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dom", "=", 
       RowBox[{"FunctionDomain", "[", 
        RowBox[{"f", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"asymptotes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "dom", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dom", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "0"}], "]"}], "]"}], "\[Equal]", "Less"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"asymptotes", ",", 
              RowBox[{"valueOfInequality", "[", 
               RowBox[{
                RowBox[{"dom", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dom", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "0"}], "]"}], "]"}], "\[Equal]", "Greater"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"asymptotes", ",", 
              RowBox[{"valueOfInequality", "[", 
               RowBox[{
                RowBox[{"dom", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dom", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "0"}], "]"}], "]"}], "\[Equal]", 
            "Inequality"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"dom", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "2"}]}], ",", 
              RowBox[{"j", "=", 
               RowBox[{"j", "+", "2"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"asymptotes", ",", 
                 RowBox[{"valueOfInequality", "[", 
                  RowBox[{
                   RowBox[{"dom", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", ";;", 
                    RowBox[{"j", "+", "2"}]}]}], "]"}], "]"}], ",", "x"}], 
                  "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"asymptotes", "=", 
       RowBox[{"DeleteDuplicates", "[", "asymptotes", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "asymptotes", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Limit", "[", 
               RowBox[{"f", ",", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"asymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"Direction", "\[Rule]", "\"\<FromAbove\>\""}]}], 
               "]"}], "\[Equal]", "\[Infinity]"}], ",", 
             RowBox[{
              RowBox[{"Limit", "[", 
               RowBox[{"f", ",", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"asymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"Direction", "\[Rule]", "\"\<FromAbove\>\""}]}], 
               "]"}], "\[Equal]", 
              RowBox[{"-", "\[Infinity]"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", 
              RowBox[{"asymptotes", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Limit", "[", 
               RowBox[{"f", ",", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"asymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], 
               "]"}], "\[Equal]", "\[Infinity]"}], ",", 
             RowBox[{
              RowBox[{"Limit", "[", 
               RowBox[{"f", ",", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"asymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], 
               "]"}], "\[Equal]", 
              RowBox[{"-", "\[Infinity]"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"output", ",", 
              RowBox[{"asymptotes", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"DeleteDuplicates", "[", "output", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"horizontalAsymptotes", "[", 
    RowBox[{"f_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"output", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"val", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"val", "=", 
       RowBox[{"Limit", "[", 
        RowBox[{"f", ",", 
         RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"val", "\[NotEqual]", "\[Infinity]"}], ",", 
          RowBox[{"val", "\[NotEqual]", 
           RowBox[{"-", "\[Infinity]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"output", ",", "val"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"val", "=", 
       RowBox[{"Limit", "[", 
        RowBox[{"f", ",", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"-", "\[Infinity]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"val", "\[NotEqual]", "\[Infinity]"}], ",", 
          RowBox[{"val", "\[NotEqual]", 
           RowBox[{"-", "\[Infinity]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"output", ",", "val"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"DeleteDuplicates", "[", "output", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotinator", "[", 
    RowBox[{"f_", ",", "dom_", ",", 
     RowBox[{"showObliqueAsymptotes_", ":", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "keyPoints", ",", "plot", ",", "absoluteRange", ",",
        "epilogPoints", ",", "epologTextOffset", ",", "epilogs", ",", 
       "hAsymptotes", ",", "vAsymptotes", ",", "oAsymptotes", ",", 
       "asymptotes", ",", "solveDomain", ",", "plotEquasions", ",", 
       "oAsymptoteHolder", ",", "plotStyle", ",", "pointObjects", ",", 
       "numberOfEquasions"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"keyPoints", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plot", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"absoluteRange", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"epilogPoints", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"epologTextOffset", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"epilogs", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"solveDomain", "=", 
       RowBox[{
        RowBox[{"dom", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
        RowBox[{"dom", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
        RowBox[{"dom", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotEquasions", "=", 
       RowBox[{"{", "f", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"oAsymptoteHolder", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotStyle", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointObjects", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numberOfEquasions", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", "f", ")"}], "[", 
          RowBox[{"[", "0", "]"}], "]"}], "\[Equal]", "List"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plotEquasions", "=", "f"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "plotEquasions", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plotStyle", ",", 
          RowBox[{"{", 
           RowBox[{"plotColors", "[", "i", "]"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "plotEquasions", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"keyPoints", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"keyPoints", ",", 
            RowBox[{"movingPointsOfInflection", "[", 
             RowBox[{
              RowBox[{"plotEquasions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dom", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "solveDomain"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"keyPoints", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"keyPoints", ",", 
            RowBox[{"stationaryPointsOfInflection", "[", 
             RowBox[{
              RowBox[{"plotEquasions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dom", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "solveDomain"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"keyPoints", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"keyPoints", ",", 
            RowBox[{"turningPoints", "[", 
             RowBox[{
              RowBox[{"plotEquasions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dom", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "solveDomain"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"keyPoints", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"keyPoints", ",", 
            RowBox[{"roots", "[", 
             RowBox[{
              RowBox[{"plotEquasions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dom", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "solveDomain"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"keyPoints", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"keyPoints", ",", 
            RowBox[{"yIntercepts", "[", 
             RowBox[{
              RowBox[{"plotEquasions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dom", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "solveDomain"}], "]"}]}], 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"keyPoints", "=", 
       RowBox[{"DeleteDuplicates", "[", "keyPoints", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{"f", ",", "dom"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"absoluteRange", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"PlotRange", "[", "plot", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"PlotRange", "[", "plot", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "plotEquasions", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "keyPoints", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"epologTextOffset", "=", 
             RowBox[{
              FractionBox["1", "10"], "*", "absoluteRange", "*", 
              RowBox[{"concaviteAtPointAsInteger", "[", 
               RowBox[{
                RowBox[{"plotEquasions", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"dom", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"keyPoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"epilogs", ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"keyPoints", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"keyPoints", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"keyPoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                   "epologTextOffset"}]}], "}"}]}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"asymptotes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "plotEquasions", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hAsymptotes", "=", 
          RowBox[{"horizontalAsymptotes", "[", 
           RowBox[{
            RowBox[{"plotEquasions", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"dom", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vAsymptotes", "=", 
          RowBox[{"verticleAsymptotes", "[", 
           RowBox[{
            RowBox[{"plotEquasions", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"dom", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"oAsymptotes", "=", 
          RowBox[{"obliqueAsymptote", "[", 
           RowBox[{
            RowBox[{"plotEquasions", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"dom", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "hAsymptotes", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"asymptotes", ",", 
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"dom", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"hAsymptotes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"dom", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"hAsymptotes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{"y", "\[Equal]", 
                 RowBox[{"hAsymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "vAsymptotes", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"asymptotes", ",", 
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"vAsymptotes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"PlotRange", "[", "plot", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"vAsymptotes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"PlotRange", "[", "plot", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{"x", "\[Equal]", 
                 RowBox[{"vAsymptotes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "oAsymptotes", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"oAsymptoteHolder", ",", 
              RowBox[{"oAsymptotes", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showObliqueAsymptotes", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<showing oblique asymptotes\>\"", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"oAsymptoteHolder", "=", 
          RowBox[{"DeleteDuplicates", "[", "oAsymptoteHolder", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "oAsymptoteHolder", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"plotEquasions", ",", 
              RowBox[{"oAsymptoteHolder", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"(", 
             RowBox[{"Length", "[", "oAsymptoteHolder", "]"}], ")"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"plotStyle", ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "keyPoints", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"pointObjects", ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"keyPoints", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"keyPoints", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"keyPoints", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{"plotEquasions", ",", "dom", ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "Large", "]"}], ",", "pointObjects", 
            ",", 
            RowBox[{"(*", 
             RowBox[{"epilogs", ","}], "*)"}], 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", "Dashed"}], "]"}], ",", "asymptotes"}], 
           "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.811528849187653*^9, 3.811528892617535*^9}, {
   3.81152893015772*^9, 3.811529106609178*^9}, {3.8115300779525423`*^9, 
   3.811530106170477*^9}, 3.812927075100635*^9, {3.813292836918676*^9, 
   3.813293010395261*^9}, {3.813293065517555*^9, 3.813293065938141*^9}, {
   3.8132944912221403`*^9, 3.81329449198674*^9}, {3.8132948413989*^9, 
   3.8132948979720984`*^9}, {3.81329501101444*^9, 3.813295046057969*^9}, 
   3.8132952311203127`*^9, {3.813295405676242*^9, 3.8132954064625587`*^9}, {
   3.813295661165106*^9, 3.813295724187522*^9}, {3.81329579312532*^9, 
   3.8132957954574013`*^9}, {3.813296691781246*^9, 3.81329670446484*^9}, 
   3.813437288727037*^9, 3.813437537180058*^9, {3.813437943096537*^9, 
   3.8134379438173037`*^9}, {3.813438117907374*^9, 3.813438118651225*^9}, {
   3.813438578780342*^9, 3.813438639532324*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"c483a50a-37c9-4d68-9c2d-d10c488c36f9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 767.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cc3b1433-d358-41a8-bbe1-aef2822b1629"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 98, "Title",ExpressionUUID->"a592f913-e062-4513-bcf7-79743ab4aff5"],
Cell[CellGroupData[{
Cell[783, 29, 581, 8, 57, "Subsubsection",ExpressionUUID->"79f95e5c-e186-46d2-99d5-a3c77603abf7"],
Cell[1367, 39, 187, 4, 38, "Input",ExpressionUUID->"4f1e8710-5c5e-44d0-be65-7b1e70bdd19f"],
Cell[1557, 45, 503, 11, 81, "Text",ExpressionUUID->"2f44ff17-925a-4d00-978b-26256129d5fa"],
Cell[2063, 58, 645, 18, 72, "Code",ExpressionUUID->"56dffe48-d3b7-4330-a2b0-56c322cb43f6"],
Cell[CellGroupData[{
Cell[2733, 80, 689, 19, 66, "Code",ExpressionUUID->"56a55774-ac29-48ed-83b7-cc8c9ef896fa"],
Cell[3425, 101, 30487, 601, 242, "Output",ExpressionUUID->"987abeea-106c-4d1d-9bdf-628cbda3ac37"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33961, 708, 324, 5, 46, "Subsubsection",ExpressionUUID->"fe5a66db-0e15-4ba9-b77f-ffddc1a70c9d"],
Cell[34288, 715, 536, 10, 81, "Text",ExpressionUUID->"49e36deb-328e-448e-ab67-2d79c55b9990"],
Cell[34827, 727, 535, 11, 72, "Code",ExpressionUUID->"749a9be6-1655-4c92-86ce-4ae3561e9381"],
Cell[CellGroupData[{
Cell[35387, 742, 319, 6, 51, "Code",ExpressionUUID->"5aab6b6f-784b-47b7-af9e-9ecbef8e3c1f"],
Cell[35709, 750, 21810, 370, 129, "Output",ExpressionUUID->"83ee11fb-23e0-459a-8db5-9082ec92aa2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57556, 1125, 348, 7, 51, "Code",ExpressionUUID->"7c6ff263-4e8d-4733-bdb9-9c3e96493967"],
Cell[57907, 1134, 14676, 267, 147, "Output",ExpressionUUID->"104d3a8e-dc8b-4f75-aa6c-304e15b44d44"]
}, Open  ]],
Cell[72598, 1404, 587, 12, 81, "Text",ExpressionUUID->"c54f45dd-59aa-43bb-9d87-ca9875265c75"],
Cell[73188, 1418, 483, 9, 72, "Code",ExpressionUUID->"c0fc913f-ccf7-43f8-bb04-649c2ded4fea"],
Cell[CellGroupData[{
Cell[73696, 1431, 309, 6, 51, "Code",ExpressionUUID->"5b59f1de-9007-4fe6-8fbc-89930dfdbde6"],
Cell[74008, 1439, 18540, 322, 129, "Output",ExpressionUUID->"58ba64ea-a057-42e1-a048-010b30a32c45"]
}, Open  ]],
Cell[92563, 1764, 586, 12, 81, "Text",ExpressionUUID->"e9fcefaf-fed6-4edb-a100-85d60ad2a707"],
Cell[93152, 1778, 460, 9, 72, "Code",ExpressionUUID->"67149c6a-aac4-4ef0-b2cb-131a86e8ff5d"],
Cell[93615, 1789, 309, 6, 51, "Code",ExpressionUUID->"5142461b-b202-4a47-9fc8-5ef0e3526d4d"],
Cell[93927, 1797, 24734, 429, 125, InheritFromParent,ExpressionUUID->"123412e6-2088-455a-8db7-833464346b06"],
Cell[118664, 2228, 201, 3, 41, "Text",ExpressionUUID->"00d65d0a-afd5-4bdc-b505-9a88233a768c"],
Cell[118868, 2233, 429, 10, 58, "Text",ExpressionUUID->"65671342-ab63-43da-822c-787a2f67dc27"],
Cell[119300, 2245, 392, 9, 51, "Code",ExpressionUUID->"ba2fe511-7899-4034-b73d-7b6c3f2c9cc6"],
Cell[CellGroupData[{
Cell[119717, 2258, 730, 20, 51, "Code",ExpressionUUID->"4f227bfb-7b7a-422a-8d1c-ab6a956b2272"],
Cell[120450, 2280, 6171, 118, 332, "Output",ExpressionUUID->"72170466-91fb-497b-a2fb-36e0734c7e0d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126670, 2404, 226, 4, 46, "Subsubsection",ExpressionUUID->"e7da2d4a-e040-4bb7-bfba-f18373435925"],
Cell[126899, 2410, 454, 9, 58, "Text",ExpressionUUID->"edc9503e-e721-452c-babd-d77cbac60feb"],
Cell[127356, 2421, 513, 11, 51, "Code",ExpressionUUID->"1e46a582-4961-40eb-ab54-6ced595bef98"],
Cell[CellGroupData[{
Cell[127894, 2436, 567, 14, 51, "Code",ExpressionUUID->"fe3cc0a2-2e69-4da2-af90-3c2305c867f4"],
Cell[128464, 2452, 5709, 115, 242, "Output",ExpressionUUID->"896782f8-d623-4ade-bf04-c47e5c290fc6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134222, 2573, 260, 5, 46, "Subsubsection",ExpressionUUID->"c8d88f35-613a-4209-9db5-e8aa2690a29a"],
Cell[134485, 2580, 658, 12, 81, "Text",ExpressionUUID->"62cd0d15-f080-444e-a6ed-48ec620e70ce"],
Cell[135146, 2594, 241, 4, 51, "Code",ExpressionUUID->"6da22188-2567-4a9d-a128-90274346cc61"],
Cell[CellGroupData[{
Cell[135412, 2602, 751, 20, 51, "Code",ExpressionUUID->"7a277444-c09c-407f-a90d-e86850d04f8a"],
Cell[136166, 2624, 865, 24, 402, "Output",ExpressionUUID->"69ece3a8-3cba-4447-bab7-a6f727f25196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137068, 2653, 639, 18, 51, "Code",ExpressionUUID->"ef987f79-f3fe-4b58-b9cc-2e6d6e86ef09"],
Cell[137710, 2673, 1678, 35, 468, "Output",ExpressionUUID->"17f67c47-bc13-4485-9bb1-92c56fe8aa66"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139437, 2714, 184, 3, 65, "Subsection",ExpressionUUID->"cf80c064-3850-4d4d-89c3-0cb9381a7c88"],
Cell[139624, 2719, 436, 9, 58, "Text",ExpressionUUID->"ea8ddc86-362c-47b4-99a1-504cd20f9a07"],
Cell[140063, 2730, 224, 4, 51, "Code",ExpressionUUID->"3b8480d5-3151-457b-9b68-6e4062f99fc3"],
Cell[140290, 2736, 398, 9, 58, "Text",ExpressionUUID->"ad58521b-a723-4281-9038-671534543eae"],
Cell[140691, 2747, 225, 4, 51, "Code",ExpressionUUID->"3f175a19-b784-4f9e-afd8-3f6ed7997dd0"],
Cell[140919, 2753, 354, 8, 96, "Text",ExpressionUUID->"411d0a35-3e40-4e31-a1b5-c4cc60f955d5"],
Cell[141276, 2763, 84826, 2093, 8529, "Code",ExpressionUUID->"c483a50a-37c9-4d68-9c2d-d10c488c36f9"]
}, Open  ]]
}, Open  ]]
}
]
*)

